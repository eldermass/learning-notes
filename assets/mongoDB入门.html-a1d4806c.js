import{_ as n,Y as s,Z as a,a0 as t}from"./framework-6d304b95.js";const e={},p=t(`<h1 id="mongodb-入门" tabindex="-1"><a class="header-anchor" href="#mongodb-入门" aria-hidden="true">#</a> MongoDb 入门</h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 直接启动</span>
mongod <span class="token parameter variable">--dbpath</span> <span class="token punctuation">..</span>/data/db
<span class="token comment"># 使用配置文件的方式启动服务</span>
mongod <span class="token parameter variable">-f</span> <span class="token punctuation">..</span>/etc/mongo.conf  
        <span class="token parameter variable">--smallfiles</span> <span class="token comment"># 空间不够时可用</span>
    <span class="token comment"># 1.编写配置文件 一般放在根目录 etc/mongodb.conf</span>
        <span class="token assign-left variable">logpath</span><span class="token operator">=</span><span class="token punctuation">..</span>/log/mongodb.log      <span class="token comment"># log地址</span>
        <span class="token assign-left variable">logappend</span><span class="token operator">=</span>false                 <span class="token comment"># log是否追加到之前的文件</span>
        <span class="token assign-left variable">dbpath</span><span class="token operator">=</span><span class="token punctuation">..</span>/data/db               <span class="token comment"># 数据存放位置</span>
        <span class="token assign-left variable">fork</span><span class="token operator">=</span>false                      <span class="token comment"># 进程是否保留在后台</span>
        port <span class="token operator">=</span> <span class="token number">27017</span>
    <span class="token comment"># 2.配置完成后，执行以下命令 安装到服务</span>
        mongod <span class="token parameter variable">--config</span> <span class="token string">&quot;F:\\mongoDB\\mongodb/etc/mongo.conf&quot;</span> <span class="token parameter variable">--install</span>
        <span class="token comment"># 或者 直接输入以下命令</span>
        mongod <span class="token parameter variable">--bind_ip</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">--logpath</span> F:<span class="token punctuation">\\</span>mongoDB<span class="token punctuation">\\</span>mongodb<span class="token punctuation">\\</span>log<span class="token punctuation">\\</span>log.txt <span class="token parameter variable">--logappend</span> <span class="token parameter variable">--dbpath</span> <span class="token string">&quot;F:\\mongoDB\\mongodb\\data\\db&quot;</span> <span class="token parameter variable">--directoryperdb</span> <span class="token parameter variable">--serviceName</span> MongoDB <span class="token parameter variable">--install</span>
        <span class="token comment"># 删除</span>
        mongod <span class="token parameter variable">--remove</span>
    <span class="token comment"># 3.配置环境变量</span>

<span class="token comment"># 安装好服务后，如果服务是手动启动，net start MongoDB, 这样就开启了后台服务了</span>

<span class="token comment"># mongo.conf文件示例  绝对路径</span>
systemLog:
    destination: <span class="token function">file</span>
    path: F:<span class="token punctuation">\\</span>mongoDB<span class="token punctuation">\\</span>mongodb<span class="token punctuation">\\</span>log<span class="token punctuation">\\</span>log.txt
    logAppend: <span class="token boolean">true</span>
storage:
    journal:
        enabled: <span class="token boolean">true</span>
    dbPath: F:<span class="token punctuation">\\</span>mongoDB<span class="token punctuation">\\</span>mongodb<span class="token punctuation">\\</span>data<span class="token punctuation">\\</span>db<span class="token punctuation">\\</span>
net: 
    port: <span class="token number">27017</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><h3 id="指令" tabindex="-1"><a class="header-anchor" href="#指令" aria-hidden="true">#</a> 指令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 高级指令</span>
    db.test.drop<span class="token punctuation">(</span><span class="token punctuation">)</span>  高级命令  等同于
<span class="token comment"># 2. 基础指令，例如</span>
    db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;drop&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment"># {指令： 目标} 会返回一个更为详细的文档</span>
<span class="token comment"># 3. 底层指令</span>
    db.<span class="token variable">$cmd</span>.findOne<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;drop&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment"># 启动</span>
db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span>getLastError: <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment"># 不带 port 为默认， --host 链接其他主机</span>
mongo <span class="token parameter variable">--port</span> <span class="token number">27017</span>
<span class="token comment"># 查看用户列表</span>
show <span class="token function">users</span>

<span class="token comment"># 库</span>
show dbs <span class="token comment"># 查看库 </span>
use <span class="token builtin class-name">test</span> <span class="token comment"># 切换/创建库，如果没有会延时创建</span>
db.dropDatabase<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 删除库</span>

<span class="token comment"># 集合</span>
show collections <span class="token comment"># 查看集合(类似表) </span>
db.acount.save<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token builtin class-name">:</span><span class="token string">&#39;Jack&#39;</span>, <span class="token string">&#39;age&#39;</span><span class="token builtin class-name">:</span> <span class="token number">23</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># 创建集合db.库名.save({})</span>
db.acount.find<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 查询acount集合</span>
db.acount.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token builtin class-name">:</span><span class="token string">&#39;Jack&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment"># 查询acount集合</span>
db.acount.drop<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 删除acount集合</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="恢复备份" tabindex="-1"><a class="header-anchor" href="#恢复备份" aria-hidden="true">#</a> 恢复备份</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 备份</span>
<span class="token comment"># 地址， 数据库名， 目录路径</span>
mongodump <span class="token parameter variable">-h</span> dbhost <span class="token parameter variable">-d</span> dbname <span class="token parameter variable">-o</span> dbdirectory

<span class="token comment"># 恢复</span>
mongorestore <span class="token parameter variable">-h</span> dbhost <span class="token parameter variable">-d</span> dbname <span class="token parameter variable">--directoryperdb</span> dbdirectory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导入导出" tabindex="-1"><a class="header-anchor" href="#导入导出" aria-hidden="true">#</a> 导入导出</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 导出</span>
mongoexport <span class="token parameter variable">-d</span> dbname <span class="token parameter variable">-c</span> collectionname <span class="token parameter variable">-q</span> <span class="token punctuation">{</span>查询条件<span class="token punctuation">}</span> <span class="token parameter variable">-f</span> name,age<span class="token operator">&gt;</span>path
mongoexport <span class="token parameter variable">-d</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-c</span> boss <span class="token parameter variable">-o</span> D:/boss.json <span class="token parameter variable">--type</span><span class="token operator">=</span>json
    <span class="token comment"># csv导出</span>
mongoexport <span class="token parameter variable">-d</span> dbname <span class="token parameter variable">-c</span> collectionname <span class="token parameter variable">-q</span> <span class="token punctuation">{</span>查询条件<span class="token punctuation">}</span> <span class="token parameter variable">-f</span> name,age --csv<span class="token operator">&gt;</span>path
mongoexport <span class="token parameter variable">-d</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-c</span> boss <span class="token parameter variable">-o</span> D:/boss.csv <span class="token parameter variable">-f</span> name,age <span class="token parameter variable">--type</span><span class="token operator">=</span>csv
<span class="token comment">#  导入</span>
mongoimport <span class="token parameter variable">-d</span> dbname <span class="token parameter variable">-c</span> collectionname <span class="token parameter variable">--type</span> csv <span class="token parameter variable">--headerline</span> <span class="token parameter variable">--drop</span> <span class="token operator">&lt;</span>path
mongoimport <span class="token parameter variable">--db</span> dbname <span class="token parameter variable">--collection</span> collectionname <span class="token parameter variable">--file</span> F:<span class="token punctuation">\\</span>users.json <span class="token parameter variable">--type</span><span class="token operator">=</span>json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="增删查改" tabindex="-1"><a class="header-anchor" href="#增删查改" aria-hidden="true">#</a> 增删查改</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 增</span>
    db.test.insert<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> 插入 不能超过4m  
    db.test.insert<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 多个插入
    db.test.save<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment"># 2. 删</span>
    db.test.remove<span class="token punctuation">(</span><span class="token punctuation">)</span> 删除所有数据
    db.test.remove<span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">)</span> 
    db.test.drop<span class="token punctuation">(</span><span class="token punctuation">)</span>   删除所有数据 和 索引
<span class="token comment"># 3. 查</span>
    db.test.count<span class="token punctuation">(</span><span class="token punctuation">)</span>  计数
    db.test.find<span class="token punctuation">(</span><span class="token punctuation">)</span>   找查
    db.test.find<span class="token punctuation">(</span>query, field, limit, skip, batchSize, options<span class="token punctuation">)</span>   找查的参数
    db.test.find<span class="token punctuation">(</span><span class="token punctuation">{</span>name: <span class="token string">&#39;huang&#39;</span>, age: <span class="token punctuation">{</span><span class="token variable">$gt</span><span class="token builtin class-name">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&#39;_id&#39;</span><span class="token builtin class-name">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span> 多条件找查, 不返回id
    比较操作符  <span class="token variable">$lt</span> <span class="token variable">$lte</span> <span class="token variable">$gt</span> <span class="token variable">$gte</span> <span class="token variable">$ne</span> 对应 <span class="token operator">&lt;</span> <span class="token operator">&lt;=</span> <span class="token operator">&gt;</span> <span class="token operator">&gt;=</span> <span class="token operator">!=</span> 
                <span class="token variable">$in</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">5</span><span class="token punctuation">]</span> 在数组中的 <span class="token variable">$nin</span> 不在其中
                <span class="token variable">$or</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>条件1<span class="token punctuation">}</span>, <span class="token punctuation">{</span>条件2<span class="token punctuation">}</span><span class="token punctuation">]</span>
                <span class="token variable">$not</span><span class="token builtin class-name">:</span> 取非
                <span class="token variable">$mod</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token number">5</span>, <span class="token number">0</span><span class="token punctuation">]</span> 取模 %5为0的
    · 高级查询规则
        null 匹配自身和不存在。 alias: null, 匹配没有别名或者别名为null的
        <span class="token variable">$exist</span> 是否存在该键     alias: <span class="token boolean">true</span>  匹配存在别名的
        /.+/i 正则表达式 js规则  
        数组:   
            fruit: <span class="token string">&#39;apple&#39;</span>    单元素匹配
            fruit.2: <span class="token string">&#39;apple&#39;</span>    下标单元素匹配
            fruit: <span class="token punctuation">{</span><span class="token variable">$size</span><span class="token builtin class-name">:</span> <span class="token number">3</span><span class="token punctuation">}</span>   长度匹配
            fruit: <span class="token punctuation">{</span><span class="token variable">$all</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span>, <span class="token string">&#39;banana&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>   多元素匹配
        内嵌文档<span class="token punctuation">(</span>子对象<span class="token punctuation">)</span>
            userName: <span class="token punctuation">{</span><span class="token string">&#39;first&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;wang&#39;</span>, <span class="token string">&#39;last&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;jing&#39;</span><span class="token punctuation">}</span>  完全匹配
            userName.first: <span class="token string">&#39;wang&#39;</span>, userName.last: <span class="token string">&#39;jing&#39;</span> 属性匹配
            <span class="token comment">#elemMatch  内嵌文档，多条件匹配</span>
    · where查询  js对象函数查询 性能低
        用函数循环遍历文档，
        db.fruit.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token variable">$where</span><span class="token builtin class-name">:</span> <span class="token function-name function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>for<span class="token punctuation">(</span>let key <span class="token keyword">in</span> this<span class="token punctuation">)</span><span class="token punctuation">{</span>if<span class="token punctuation">(</span>key <span class="token operator">==</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>return true<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    · 查询游标
        <span class="token number">1</span>. <span class="token builtin class-name">let</span> cursor <span class="token operator">=</span> db.number.find<span class="token punctuation">(</span><span class="token punctuation">)</span> 定义游标
        <span class="token number">2</span>. cursor.next<span class="token punctuation">(</span><span class="token punctuation">)</span>  查询下一个值
            while<span class="token punctuation">(</span>cursor.hasNext<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">{</span> cursor.next<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  查询最后一个
        游标操作
        db.number.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.limit<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
        db.number.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.skip<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>  跳过5个匹配的值, 用于分页
        db.number.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.sort<span class="token punctuation">(</span><span class="token punctuation">{</span>x: <span class="token number">1</span>, y: -1<span class="token punctuation">}</span><span class="token punctuation">)</span>， <span class="token number">1</span> 升序， <span class="token parameter variable">-1</span> 降序

<span class="token comment"># 4. 改 ({查询条件}, {更新的值}, 是否在没找到old插入新的, 是否多文档更新)</span>
    db.test.update<span class="token punctuation">(</span><span class="token punctuation">{</span>old<span class="token punctuation">}</span>,<span class="token punctuation">{</span>new<span class="token punctuation">}</span><span class="token punctuation">)</span> 全量更新
    db.test.update<span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&#39;$set&#39;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">&#39;password&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;ddd&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  局部更新
    db.test.update<span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&#39;$unset&#39;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">&#39;age&#39;</span><span class="token builtin class-name">:</span> <span class="token number">23</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        去除一个 键值
    db.test.update<span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&#39;$inc&#39;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>age: <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>             age 加一
    db.test.update<span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&#39;$push&#39;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>title: <span class="token string">&#39;nameList&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> 给title数组push一个值
    db.test.update<span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&#39;$addToSet&#39;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>title: <span class="token string">&#39;nameList&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> 避免重复的push添加
    db.test.update<span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&#39;$pop&#39;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>title: <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> 给title数组pop一个值 ， <span class="token number">1</span>尾部， -1头部 删除
    db.test.update<span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token string">&#39;$pull&#39;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>title: ‘nameList<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  删除数组中的 指定位置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="索引统计" tabindex="-1"><a class="header-anchor" href="#索引统计" aria-hidden="true">#</a> 索引统计</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 一.创建索引</span>
    <span class="token comment"># 单件索引，</span>
        db.test.ensureIndex<span class="token punctuation">(</span><span class="token punctuation">{</span>userid: <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># 升序</span>
    <span class="token comment"># 复合索引</span>
        db.test.ensureIndex<span class="token punctuation">(</span><span class="token punctuation">{</span>userid: <span class="token number">1</span>, age: -1<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment"># 唯一索引  // 复合唯一索引，的组合不同即可</span>
        db.test.ensureIndex<span class="token punctuation">(</span><span class="token punctuation">{</span>userid: <span class="token number">1</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>unique: true<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment"># 二.查询分析</span>
    <span class="token comment"># explain 用于查询性能分析</span>
        db.test.find<span class="token punctuation">(</span><span class="token punctuation">{</span>username: <span class="token string">&#39;wang&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>.explain<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># hint 强制指定查询使用索引</span>
        db.test.find<span class="token punctuation">(</span>age: <span class="token punctuation">{</span><span class="token variable">$lt</span> <span class="token builtin class-name">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span>.hint<span class="token punctuation">(</span><span class="token punctuation">{</span>userName: <span class="token number">1</span>, age: <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment"># 三. 索引管理</span>
    <span class="token comment"># 1. 查看索引</span>
        db.test.getIndexes<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 2. 删除索引</span>
        db.test.dropIndex<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 可传入string</span>
        db.test.dropIndexes<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 删除全部</span>

        db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;dropIndexes&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;test&#39;</span>, <span class="token string">&#39;index&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;x_1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment"># 3. 重建索引</span>
        db.test.reIndex<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token comment"># 四. 聚合统计</span>
    <span class="token comment"># 1. 统计 count</span>
        db.test.count<span class="token punctuation">(</span><span class="token punctuation">)</span>
        db.test.count<span class="token punctuation">(</span><span class="token punctuation">{</span>age: <span class="token punctuation">{</span><span class="token variable">$lt</span><span class="token builtin class-name">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment"># 2. 聚合</span>
        db.test.distinct<span class="token punctuation">(</span>string, <span class="token punctuation">{</span>queryObj<span class="token punctuation">}</span><span class="token punctuation">)</span>
        db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span>distinct: <span class="token string">&#39;test&#39;</span>, key: <span class="token string">&#39;value&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment"># 3. 分组</span>
        db.test.group<span class="token punctuation">(</span><span class="token punctuation">{</span>key: <span class="token punctuation">{</span><span class="token string">&#39;x&#39;</span><span class="token builtin class-name">:</span> true<span class="token punctuation">}</span>,            <span class="token comment"># 分组目标</span>
            initial: <span class="token punctuation">{</span>number: <span class="token number">0</span><span class="token punctuation">}</span>,                   <span class="token comment"># 初始值</span>
            reduce: <span class="token punctuation">(</span>doc, prev<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>prev.number++<span class="token punctuation">}</span>, <span class="token comment"># 迭代函数</span>
            cond: <span class="token punctuation">{</span>x: <span class="token punctuation">{</span><span class="token variable">$gt</span><span class="token builtin class-name">:</span> <span class="token number">90</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                  <span class="token comment"># 查询条件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),c=[p];function o(l,i){return s(),a("div",null,c)}const r=n(e,[["render",o],["__file","mongoDB入门.html.vue"]]);export{r as default};
