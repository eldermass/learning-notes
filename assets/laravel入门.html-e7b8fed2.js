import{_ as e,Y as o,Z as c,a1 as n,a2 as s,a3 as t,a0 as p,E as i}from"./framework-6d304b95.js";const l={},u=n("h1",{id:"laravel",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#laravel","aria-hidden":"true"},"#"),s(" laravel")],-1),r={href:"https://laravelacademy.org/laravel-tutorial-5_7",target:"_blank",rel:"noopener noreferrer"},k={href:"https://laravelacademy.org/post/9536.html#toc_6",target:"_blank",rel:"noopener noreferrer"},d=p(`<h2 id="一-入门知识" tabindex="-1"><a class="header-anchor" href="#一-入门知识" aria-hidden="true">#</a> 一. 入门知识</h2><h3 id="_1-基础入门" tabindex="-1"><a class="header-anchor" href="#_1-基础入门" aria-hidden="true">#</a> 1. 基础入门</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 通过安装器 或 composer安装</span>
<span class="token function">composer</span> global require laravel/installer
laravel new blog

<span class="token comment"># 通过composer安装：</span>
<span class="token function">composer</span> create-project laravel/laravel blog --prefer-dist

<span class="token comment"># 2. 读取配置</span>
<span class="token comment"># config 目录下，通过env()函数读取到.env文件的变量。也可使用时config()函数读取值</span>
如：config<span class="token punctuation">(</span><span class="token string">&quot;services.sparkpost.secret&quot;</span><span class="token punctuation">)</span>
    env<span class="token punctuation">(</span><span class="token string">&quot;SPARKPOST_SECRET&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 3. 基本常识</span>
<span class="token comment"># 对应域对应的连接</span>
  url<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 命名路由的连接</span>
  route<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span>, <span class="token punctuation">[</span><span class="token string">&quot;id&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># 渲染函数，resource/views下对应的blade页面</span>
  view<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 模板：</span>
    <span class="token punctuation">{</span><span class="token punctuation">{</span> xxx <span class="token punctuation">}</span><span class="token punctuation">}</span>   转移
    <span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span> xxx <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">}</span> 不转义
<span class="token comment"># 打印sql语句</span>
<span class="token punctuation">\\</span>DB::enableQueryLog<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$users</span> <span class="token operator">=</span> Task::with<span class="token punctuation">(</span><span class="token string">&#39;belongTo&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>find<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dump<span class="token punctuation">(</span><span class="token punctuation">\\</span>DB::getQueryLog<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>

<span class="token comment"># 交互命令</span>
<span class="token comment"># 创建控制器</span>
php artisan make:COntroller User/Admin
<span class="token comment"># 创建迁移类</span>
php artisan make:migration create_users_table
<span class="token comment"># 执行迁移</span>
php artisan migrate
<span class="token comment"># 回滚迁移</span>
php artisan migrate:rollback
<span class="token comment"># 重置迁移</span>
php artisan migrate:reset
<span class="token comment"># 创建填充类</span>
php artisan make:seeder UsersTableSeeder
<span class="token comment"># 执行填充</span>
php artisan db:seed <span class="token parameter variable">--class</span><span class="token operator">=</span>UsersTableSeeder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-交互入口-artisan" tabindex="-1"><a class="header-anchor" href="#_2-交互入口-artisan" aria-hidden="true">#</a> 2. 交互入口 artisan</h3>`,4),v={href:"https://laravelacademy.org/post/9684.html",target:"_blank",rel:"noopener noreferrer"},g=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// app/Console/Kernel.php  中注册</span>
<span class="token comment">// 自定义命令</span>
<span class="token class-name static-context">Artisan</span><span class="token operator">::</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;welcome:message_simple&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;欢迎访问 Laravel 学院!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;打印欢迎信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-tinker-命令式操作" tabindex="-1"><a class="header-anchor" href="#_3-tinker-命令式操作" aria-hidden="true">#</a> 3. tinker 命令式操作</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// php artisan tinker 即可进入 Laravel Tinker 的交互式 Shell。</span>

<span class="token comment">// doc 命令用于找查文档和辅助函数</span>
doc config      show config


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二-脚本操作" tabindex="-1"><a class="header-anchor" href="#二-脚本操作" aria-hidden="true">#</a> 二. 脚本操作</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 通过Artisan命令,执行相应的操作</span>
<span class="token comment"># 脚本化创建控制器</span>
php artisan make:controller TaskController
php artisan make:controller PostController <span class="token parameter variable">--resource</span>
<span class="token comment"># 查看应用的所有路由</span>
php artisan route:list

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-定义路由" tabindex="-1"><a class="header-anchor" href="#三-定义路由" aria-hidden="true">#</a> 三. 定义路由</h2>`,6),m={href:"https://laravelacademy.org/post/9612.html",target:"_blank",rel:"noopener noreferrer"},b=p(`<h3 id="_1-闭包路由" tabindex="-1"><a class="header-anchor" href="#_1-闭包路由" aria-hidden="true">#</a> 1. 闭包路由</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 单个动作，还有post/delete, any等</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 多个</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;get&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;post&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 视图路由</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/wel&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;wel&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;params&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;param&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-控制器路由" tabindex="-1"><a class="header-anchor" href="#_2-控制器路由" aria-hidden="true">#</a> 2. 控制器路由</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 传递给 App\\Http\\Controllers\\WelcomeController 控制器的 index 方法进行处理</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;WelcomeController@index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-路由参数" tabindex="-1"><a class="header-anchor" href="#_3-路由参数" aria-hidden="true">#</a> 3. 路由参数</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 获取动态路由参数</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;user/{id}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token variable">$id</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 可选获取动态路由参数</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;user/{id?}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token variable">$id</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 正则匹配路由参数</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;page/{id}/{slug}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token variable">$slug</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token variable">$id</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;:&quot;</span> <span class="token operator">.</span> <span class="token variable">$slug</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;id&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;[0-9]+&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;slug&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;[A-Za-z]+&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// 全局约束</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;[0-9]+&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-路由分组" tabindex="-1"><a class="header-anchor" href="#_4-路由分组" aria-hidden="true">#</a> 4. 路由分组</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 数组内提取共同特征, 然后分成多组</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;page1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;page2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//  公用中间件， 定义在App\\Http\\Middleware里 ，在App\\Http\\Kernel中管理</span>
<span class="token comment">//  其参数可用数组，如[&quot;auth&quot;, &quot;another&quot;]</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">middleware</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;auth&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;dashboard&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string double-quoted-string">&quot;dashboard&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;account&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string double-quoted-string">&quot;account&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 定义共有前缀</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;api&quot;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token comment">// 共有子域名</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">domain</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;admin.blog.test&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">domain</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;{account}.blog.test&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user/{id}&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$account</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 共有命名空间</span>
<span class="token comment">// 公用命名空间默认为App\\Http\\Controllers，修改于app/Providers/RouteServiceProvider.php</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">namespace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Admin&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// App\\Http\\Controllers\\Admin\\AdminController       可得到该命名空间</span>
    <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/admin&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;AdminController@index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 命名路由前缀</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user.&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;{id?}&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 处理 /user/{id} 路由，路由命名为 user.show</span>
        <span class="token keyword">return</span> <span class="token function">route</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user.show&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;show&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-路由模型绑定" tabindex="-1"><a class="header-anchor" href="#_5-路由模型绑定" aria-hidden="true">#</a> 5. 路由模型绑定</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 应用会将传入参数值赋值给 {task}，然后默认以参数值作为资源 ID 在底层通过 Eloquent 查询获取对应模型实例，直接获取资源</span>
<span class="token comment">// Task 继承自 Illuminate\\Database\\Eloquent\\Model;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;task/{id}&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$task</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Task</span><span class="token operator">::</span><span class="token function">findOrFail</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 隐式绑定</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;task/{user}&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span> <span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// $user相当于User::find(user)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 显示绑定到RouteServiceProvider</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name class-name-fully-qualified static-context">App<span class="token punctuation">\\</span>User</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-兜底路由" tabindex="-1"><a class="header-anchor" href="#_6-兜底路由" aria-hidden="true">#</a> 6. 兜底路由</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 兜底路由</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">fallback</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;我是最后的屏障&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 路由屏障</span>
<span class="token comment">// 在 Laravel 中该功能通过内置的 throttle 中间件来实现，该中间件接收两个参数，第一个是次数上限，第二个是指定时间段（单位：分钟）：</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">middleware</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;throttle:60,1&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/user&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">middleware</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;throttle:rate_limit,1&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/user&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 在 User 模型中设置自定义的 rate_limit 属性值</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/post&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 在 Post 模型中设置自定义的 rate_limit 属性值</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-路由请求伪造" tabindex="-1"><a class="header-anchor" href="#_7-路由请求伪造" aria-hidden="true">#</a> 7. 路由请求伪造</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// _method隐藏域，传出的方法会被当做真正的路由</span>
<span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string double-quoted-string">&quot;/task/1&quot;</span> method<span class="token operator">=</span><span class="token string double-quoted-string">&quot;POST&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">&quot;hidden&quot;</span> name<span class="token operator">=</span><span class="token string double-quoted-string">&quot;_method&quot;</span> value<span class="token operator">=</span><span class="token string double-quoted-string">&quot;DELETE&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
<span class="token comment">// 避免[跨站请求伪造攻击]（CSRF）</span>
<span class="token comment">// 默认所有的路由均是   只读， 如果写入需要传入_token</span>
<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">&quot;hidden&quot;</span> name<span class="token operator">=</span><span class="token string double-quoted-string">&quot;_token&quot;</span> value<span class="token operator">=</span><span class="token string double-quoted-string">&quot;{{ csrf_token() }}&quot;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四-视图模型" tabindex="-1"><a class="header-anchor" href="#四-视图模型" aria-hidden="true">#</a> 四. 视图模型</h2><h3 id="_1-view" tabindex="-1"><a class="header-anchor" href="#_1-view" aria-hidden="true">#</a> 1. view</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 返回resource/views下的视图，并传参</span>
<span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;page.show&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;page.show&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 视图间共享变量, AppServiceProvider 的 boot 方法中定义如下内容，便能在说有blade页面中访问该变量</span>
<span class="token function">view</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">share</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;siteName&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Laravel学院&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-blade-语法" tabindex="-1"><a class="header-anchor" href="#_2-blade-语法" aria-hidden="true">#</a> 2. blade 语法</h3><div class="language-PHP line-numbers-mode" data-ext="PHP"><pre class="language-PHP"><code>// blade页面会被编译然后缓存到storage/framework/views
// 通过 {{ }} 渲染 PHP 变量（最常用）
{{ $name }}
// 通过 {!! !!} 渲染原生 HTML 代码（用于富文本数据渲染）
{!! $name !!}
// 通过以 @ 作为前缀的 Blade 指令执行一些控制结构和继承、引入之类的操作
@php
// Blade 引擎编译时会移除 @，保留 {{ $vueData }} 结构
@{{ $vueData }}
// 注释
{{-- 注释内容 --}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-结构控制" tabindex="-1"><a class="header-anchor" href="#_3-结构控制" aria-hidden="true">#</a> 3. 结构控制</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 条件语句</span>
@<span class="token keyword">if</span>、@<span class="token keyword">else</span>、@<span class="token keyword">elseif</span>
<span class="token comment">// 除非</span>
@unless
@<span class="token keyword">isset</span>、@<span class="token keyword">empty</span>
<span class="token comment">// 分支语句</span>
@<span class="token keyword">switch</span>、@<span class="token keyword">case</span>、@<span class="token keyword">break</span>、@<span class="token keyword">default</span> 和 @<span class="token keyword">endswitch</span>
<span class="token comment">// 循环语句 ， 自带$loop变量</span>
@<span class="token keyword">for</span>、@<span class="token keyword">foreach</span> 和 @<span class="token keyword">while</span>
@forelse
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-模板继承-和-组件引入" tabindex="-1"><a class="header-anchor" href="#_4-模板继承-和-组件引入" aria-hidden="true">#</a> 4. 模板继承 和 组件引入</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 定义插槽</span>
<span class="token comment">// @yield</span>
@<span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;默认值&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// @section/@show 可以将子视图传递给继承模板</span>
@section<span class="token operator">/</span>@show

<span class="token comment">// 继承插槽</span>
@<span class="token keyword">extends</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;layout&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 内容 @parent 能继上级承传过来的内容</span>
@section<span class="token operator">/</span>@endsection

<span class="token comment">// 引入其他组件试图,(就是一个blade片段)</span>
@<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;com.view&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;text&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;这是传入组件的值&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// @each 指令支持多个参数，第一个参数用于指定要循环引入的组件名，第二个参数是要遍历的集合变量，第三个参数是在引入组件中使用的变量名（对应 $modules 集合中单个元素），最后一个参数是集合数据为空时引入的默认组件。</span>
@<span class="token function">each</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;partials.module&#39;</span><span class="token punctuation">,</span> <span class="token variable">$modules</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;module&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;partials.empty-module&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 插槽分发 @component类似include引入一个组件</span>
@slot 和 @<span class="token function">component</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;模板&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;传值&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-预设视图组件数据变量" tabindex="-1"><a class="header-anchor" href="#_5-预设视图组件数据变量" aria-hidden="true">#</a> 5. 预设视图组件数据变量</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// app/Providers/AppServiceProvider.php 的 boot 方法</span>
<span class="token function">view</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">composer</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;partials.header&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;partials.*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$view</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$view</span><span class="token operator">-&gt;</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;posts&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// app/Http/ViewComposers 目录下创建一个自定义 View Composer 类 RecentPostsComposer.php,</span>
<span class="token comment">// 当我们在 View Composer 中调用 RecentPostsComposer 类的时候，compose 方法会被自动调用从而完成变量预设：</span>
<span class="token function">view</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">composer</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;partials.sidebar&#39;</span><span class="token punctuation">,</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>ViewComposers<span class="token punctuation">\\</span>RecentPostsComposer</span><span class="token operator">::</span><span class="token keyword">class</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-注入服务" tabindex="-1"><a class="header-anchor" href="#_6-注入服务" aria-hidden="true">#</a> 6. 注入服务</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>@<span class="token function">inject</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;analytics&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;App\\Services\\Analytics&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_7-自定义-blade-命令" tabindex="-1"><a class="header-anchor" href="#_7-自定义-blade-命令" aria-hidden="true">#</a> 7. 自定义 blade 命令</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>// 在 AppServiceProvider 的 boot 方法中注册这个指令
Blade::directive(&#39;datetime&#39;, function($expression) {
    return &quot;<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token variable">$expression</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Y/m/d H:i:s&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span>&quot;;
});
// 指令统一显示指定格式的日期时间了。
@datetime($time)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五-处理请求" tabindex="-1"><a class="header-anchor" href="#五-处理请求" aria-hidden="true">#</a> 五. 处理请求</h2><h3 id="_1-注入请求对象" tabindex="-1"><a class="header-anchor" href="#_1-注入请求对象" aria-hidden="true">#</a> 1. 注入请求对象</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 门面获取</span>
<span class="token comment">// use Illuminate\\Support\\facades\\Input</span>
<span class="token variable">$task</span><span class="token operator">-&gt;</span><span class="token property">title</span> <span class="token operator">=</span> <span class="token class-name static-context">Input</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// use Illuminate\\Http\\Request; 和 request() 门面</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 全部</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">except</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 排除</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">only</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;site&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;domain&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 只要</span>
<span class="token comment">// 先行判断has, exists</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">// 获取某一值 get, post, input, 获取数组中的某一个</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;books.0.author&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;设置默认值&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 基数从1开始</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">segments</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 带着请求跳转</span>
<span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;form&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">withInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 存储使用上一次请求</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">flash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">old</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-上传文件" tabindex="-1"><a class="header-anchor" href="#_2-上传文件" aria-hidden="true">#</a> 2. 上传文件</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># $request-&gt;file() 方法获取的是一个 Illuminate\\Http\\UploadedFile 对象实例</span>
<span class="token comment"># 使用了 Storage::disk(&#39;public&#39;) 磁盘将上传文件保存到本地，关于该磁盘的自定义配置信息可以去 config/filesystems.php 文件中查看</span>
<span class="token comment"># 如果要让上传到 storage/app/public 目录的文件可以被外部访问，还要执行以下命令</span>
php artisan storage:link
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;picture&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>picture<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/form/file_upload&quot;</span><span class="token punctuation">,</span> formData<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;multipart/form-data&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-表单验证" tabindex="-1"><a class="header-anchor" href="#_3-表单验证" aria-hidden="true">#</a> 3. 表单验证</h3>`,36),h={href:"https://laravelacademy.org/post/9547.html#toc_17",target:"_blank",rel:"noopener noreferrer"},f=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Illuminate\\Foundation\\Validation\\ValidatesRequests;</span>
 <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bail|required|string|between:2,32&#39;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;title.required&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;自定义提示&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;title.string&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;可选&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;title.between&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;标题长度必须介于2-32之间&#39;</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 类使用</span>
<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Validator</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// $validator-&gt;fails();</span>
<span class="token comment">// $validator-&gt;errors()-&gt;all();</span>

<span class="token comment">// 继承使用</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>FormRequest</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六-数据库查询" tabindex="-1"><a class="header-anchor" href="#六-数据库查询" aria-hidden="true">#</a> 六. 数据库查询</h2><h3 id="_1-连接" tabindex="-1"><a class="header-anchor" href="#_1-连接" aria-hidden="true">#</a> 1. 连接</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// config/database.php中配置</span>
<span class="token comment">// 默认连接mysql配置，connection可以进行选择，</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">connection</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;mysql_old&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//  Eloquent 模型类 中</span>
<span class="token keyword">protected</span> <span class="token variable">$connection</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;mysql_old&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 读写分离, 在database.php中配置</span>
<span class="token string single-quoted-string">&#39;mysql&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;mysql&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;read&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;host&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_HOST_READ&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;127.0.0.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;write&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;host&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">env</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;DB_HOST_WRITE&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;127.0.0.1&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token comment">// 数据库迁移</span>
<span class="token comment">// 创建迁移类</span>
php artisan make<span class="token punctuation">:</span>migration create_users_table
<span class="token comment">// 执行迁移</span>
php artisan migrate
<span class="token comment">// 回滚迁移</span>
php artisan migrate<span class="token punctuation">:</span>rollback

<span class="token comment">// 数据库填充</span>
<span class="token comment"># 创建填充类</span>
php artisan make<span class="token punctuation">:</span>seeder UsersTableSeeder
<span class="token comment"># 执行填充</span>
php artisan db<span class="token punctuation">:</span>seed <span class="token operator">--</span><span class="token keyword">class</span><span class="token operator">=</span>UsersTableSeeder
<span class="token comment">// 或者加入集体执行</span>
php artisan db<span class="token punctuation">:</span>seed
<span class="token comment">// 或加入Seeder</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name static-context">UsersTableSeeder</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 通过模型工厂填充数据</span>
<span class="token comment">// 创建工厂  database/factories 里</span>
<span class="token comment">// 加入执行  database/seeds 加入run函数里， 执行填充时会调用</span>
<span class="token function">factory</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>User</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 执行填充</span>
php artisan db<span class="token punctuation">:</span>seed <span class="token operator">--</span><span class="token keyword">class</span><span class="token operator">=</span>UsersTableSeeder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-操作" tabindex="-1"><a class="header-anchor" href="#_2-操作" aria-hidden="true">#</a> 2. 操作</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// DB门面用于操作数据库,  use Illuminate\\Database\\Eloquent\\Model;</span>
<span class="token comment">// statement 用原生sql操作数据库</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">statement</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;drop table \`users\`&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// DB提供的原生语句方法， select， insert， update， delete等</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;select * from \`users\` where \`name\` = ?&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;select * from \`users\` where \`name\` = :name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 查询构建器进行增删改查  select， insert， update， delete等</span>
<span class="token comment">// get 获取， first 第一条</span>
<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 插入数据</span>
<span class="token comment">// DB::table(&#39;users&#39;)-&gt;insertGetId    这个可以返回主键</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">str_random</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">str_random</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;@163.com&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">bcrypt</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;secret&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 插入多条记录</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;123&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;456&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// 更新一条记录</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">str_random</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// 更新数值 increment 和 decrement</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// views+1</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// views+5</span>
<span class="token comment">// 删除</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;=&#39;</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 重置自增记录 truncate  会清空表</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">truncate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-复杂的-sql-语句" tabindex="-1"><a class="header-anchor" href="#_3-复杂的-sql-语句" aria-hidden="true">#</a> 3. 复杂的 sql 语句</h3>`,7),q={href:"https://laravelacademy.org/post/9698.html",target:"_blank",rel:"noopener noreferrer"},w=p(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 快速获取字段的值, 如果是数组只能获取第一个</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 判断是否存在， 与之相对的方法 doesntExist()。</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 形成关联数组, 值在前，键在后</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">pluck</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 数据较大时分块</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">chunk</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$users</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$names</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$users</span> <span class="token keyword">as</span> <span class="token variable">$user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$names</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// count、sum、avg、min、max 聚合函数</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment"># 计数     9</span>

<span class="token comment">// 高级查询</span>
<span class="token comment">// like</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;like&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Laravel学院%&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// and</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&lt;&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&lt;&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&lt;&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">orWhere</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// between</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereBetween</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereNotBetween</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// in</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// null</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereNull</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;email_verified_at&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// notNull</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereNotNull</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;email_verified_at&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 日期 whereYear  whereMonth  whereDay  whereTime</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereDate</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;2018-11-28&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment"># 具体日期</span>
<span class="token comment">// 字段间比较</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereColumn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;updated_at&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// json字段查询，options是一个json字段</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;options-&gt;language&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;en&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereJsonContains</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;options-&gt;languages&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;en_US&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;zh_CN&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 参数分组，示例对应select * from posts where id &lt;= 10 or (views &gt; 0 and created_at &lt; &#39;2018-11-28 14:00&#39;);</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&lt;=&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">orWhere</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">whereDate</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&lt;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;2018-11-28&#39;</span><span class="token punctuation">)</span>
        <span class="token operator">-&gt;</span><span class="token function">whereTime</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&lt;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;14:00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// whereExists， select * from \`users\` where exists (select 1 from \`posts\` where posts.user_id = users.id);</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">whereExists</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">raw</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">whereRaw</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts.user_id = users.id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-联表查询" tabindex="-1"><a class="header-anchor" href="#_4-联表查询" aria-hidden="true">#</a> 4. 联表查询</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 等值链接， inner 是交集</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span> g<span class="token operator">.</span>id <span class="token keyword">as</span> gid from users u <span class="token constant">INNER</span> <span class="token constant">JOIN</span> user_group g on u<span class="token operator">.</span>group_id <span class="token operator">=</span> g<span class="token operator">.</span>id<span class="token punctuation">;</span>
<span class="token comment">// 不等链接 &lt; , &gt; , &lt;&gt;</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span> g<span class="token operator">.</span>id <span class="token keyword">as</span> gid from users u <span class="token constant">INNER</span> <span class="token constant">JOIN</span> user_group g on u<span class="token operator">.</span>group_id <span class="token operator">&lt;</span><span class="token operator">&gt;</span> g<span class="token operator">.</span>id<span class="token punctuation">;</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;user_group.id&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group.id as gid&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.password&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 左链接， 返回左表中的所有行，如果左表中的行在右表中没有匹配行，则返回结果中右表中的对应列返回空</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span> g<span class="token operator">.</span>id <span class="token keyword">as</span> gid from users u left <span class="token constant">JOIN</span> user_group g on u<span class="token operator">.</span>group_id <span class="token operator">=</span> g<span class="token operator">.</span>id<span class="token punctuation">;</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;user_group.id&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group.id as gid&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.password&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 右链接，返回右表中的所有行，如果右表中的行在左表中没有匹配行，则结果中左表中的对</span>
<span class="token constant">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span> g<span class="token operator">.</span>id <span class="token keyword">as</span> gid from users u right <span class="token constant">JOIN</span> user_group g on u<span class="token operator">.</span>group_id <span class="token operator">=</span> g<span class="token operator">.</span>id<span class="token punctuation">;</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">rightJoin</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;user_group.id&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group.id as gid&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.password&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 全连接，左+右， full join</span>
<span class="token comment">// 交叉链接，笛卡尔积，左 * 右</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">crossJoin</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;user_group.id&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group.id as gid&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.password&#39;</span><span class="token punctuation">)</span>
<span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 匿名组装</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$join</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$join</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group.id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;=&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.group_id&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">whereNotNull</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group.allowed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group.id as gid&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;user_group.allowed&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;users.password&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_group.allowed&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 联合查询, 把两次查询的内容合在一起</span>
<span class="token punctuation">(</span>select <span class="token operator">*</span> from <span class="token string backtick-quoted-string">\`users\`</span> where <span class="token string backtick-quoted-string">\`group_id\`</span> <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token function">union</span> <span class="token punctuation">(</span>select <span class="token operator">*</span> from <span class="token string backtick-quoted-string">\`users\`</span> where <span class="token string backtick-quoted-string">\`password\`</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;6666&#39;</span><span class="token punctuation">)</span>
<span class="token variable">$posts_a</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;6666&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$posts_b</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;group_id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&lt;=&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">union</span><span class="token punctuation">(</span><span class="token variable">$posts_a</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 排序 desc 降序， asc 升序</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;desc&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 随机排序</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">inRandomOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 分组 , having()可以过滤不满足的结果</span>
select user_id<span class="token punctuation">,</span> <span class="token function">sum</span><span class="token punctuation">(</span>views<span class="token punctuation">)</span> <span class="token keyword">as</span> total_views from <span class="token string backtick-quoted-string">\`posts\`</span> group by <span class="token string backtick-quoted-string">\`user_id\`</span><span class="token punctuation">;</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">groupBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_id&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">selectRaw</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user_id, sum(views) as total_views&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">having</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;total_views&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;=&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 分页</span>
<span class="token comment">// skip从第几个开始，take取几条数据</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// offset从第几个开始，limit取几条数据</span>
<span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七-eloquent-模型类" tabindex="-1"><a class="header-anchor" href="#七-eloquent-模型类" aria-hidden="true">#</a> 七. Eloquent 模型类</h2>`,4),y={href:"https://laravelacademy.org/post/19531.html",target:"_blank",rel:"noopener noreferrer"},x=p(`<h3 id="_1-查找" tabindex="-1"><a class="header-anchor" href="#_1-查找" aria-hidden="true">#</a> 1. 查找</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// Eloquent 模型，use Illuminate\\Database\\Eloquent\\Model;</span>
<span class="token comment">// php artisan make:model Models/User， 然后写入</span>
<span class="token keyword">protected</span> <span class="token variable">$connection</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;mysql&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">protected</span> <span class="token variable">$table</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">protected</span> <span class="token variable">$primaryKey</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 获取所有表</span>
<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>User</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 每次获取一条</span>
<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>User</span><span class="token operator">::</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 根据主键获取, firstOrFail 会直接返回404页面</span>
<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Post</span><span class="token operator">::</span><span class="token function">cursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$post</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">dump</span><span class="token punctuation">(</span><span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token property">title</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;:&#39;</span> <span class="token operator">.</span> <span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 获取指定查询结果</span>
<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>User</span><span class="token operator">::</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;desc&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-插入" tabindex="-1"><a class="header-anchor" href="#_2-插入" aria-hidden="true">#</a> 2. 插入</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 实例化，调用save()方法</span>
<span class="token variable">$post</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">App<span class="token punctuation">\\</span>Post</span><span class="token punctuation">;</span>
<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token property">username</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;名字&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token property">password</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;密码&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 快捷的插入方法，比如 firstOrCreate 和 firstOrNew(不会插入数据库)，先查询，找不到就插入，需要fillable里加上对应的字段</span>
<span class="token keyword">protected</span> <span class="token variable">$fillable</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">firstOrCreate</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;测试文章标题1&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-更新数据" tabindex="-1"><a class="header-anchor" href="#_3-更新数据" aria-hidden="true">#</a> 3. 更新数据</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 取出修改，然后存储。多条用循环依次修改</span>
<span class="token variable">$post</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token property">title</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;测试文章标题更新&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 快捷的更新方法 updateOrCreate，找不到就新建同上</span>
<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">user</span><span class="token operator">::</span><span class="token function">updateOrCreate</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;学院君&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;admin@laravelacademy.org&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-删除" tabindex="-1"><a class="header-anchor" href="#_4-删除" aria-hidden="true">#</a> 4. 删除</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 找到就删除</span>
<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">Users</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 软删除</span>
<span class="token comment">// 在模型类的中使用SoftDEletes，就能隐去被软删除的结果</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>SoftDeletes</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Post</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">SoftDeletes</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// withTrashed可以获取到被软删除的结果</span>
<span class="token comment">// onlyTrashed用于只获取被软删除的结果</span>
<span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">withTrashed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// restore恢复被软删除的记录</span>
<span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">onlyTrashed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 强制删除</span>
<span class="token variable">$post</span><span class="token operator">-&gt;</span><span class="token function">forceDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-批量赋值" tabindex="-1"><a class="header-anchor" href="#_5-批量赋值" aria-hidden="true">#</a> 5. 批量赋值</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 通过构造器写入数据库， 白名单之外的赋值不会写入</span>
<span class="token comment">// $fillable 白名单， $guarded 黑名单</span>
<span class="token variable">$post</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;测试文章标题&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;content&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;测试文章内容&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$post</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Post</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 修改</span>
<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">Users</span><span class="token operator">::</span><span class="token function">findOrFail</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;黄油煎&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-访问器与修改器" tabindex="-1"><a class="header-anchor" href="#_6-访问器与修改器" aria-hidden="true">#</a> 6.访问器与修改器</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 在模型中定义方法getDisplayNameAttribute，就能直接通过display_name属性访问</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getDisplayNameAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">nickname</span> <span class="token operator">?</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">nickname</span> <span class="token punctuation">:</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">display_name</span>

<span class="token comment">// 放入数据库前会先修改属性，setCardNoAttribute，会将传入card_no修改</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setCardNoAttribute</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 将所有空格去掉</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">attributes</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;card_no&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">card_no</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;6222020903001483077&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 数组 &amp; JSON 转化，直接存取即可</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">settings</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;city&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;杭州&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;hobby&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;读书&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;撸码&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-作用域" tabindex="-1"><a class="header-anchor" href="#_7-作用域" aria-hidden="true">#</a> 7. 作用域</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>// 使用全局作用域后，之后的操作都会带上相应的操作whereNotNull
// app/Scopes 目录下
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Scopes</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Builder</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Scope</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">EmailVerifiedAtScope</span> <span class="token keyword">implements</span> <span class="token class-name">Scope</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">apply</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Builder</span> <span class="token variable">$builder</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Model</span> <span class="token variable">$model</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$builder</span><span class="token operator">-&gt;</span><span class="token function">whereNotNull</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;email_verified_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 模型类里使用</span>
<span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword static-context">static</span><span class="token operator">::</span><span class="token function">addGlobalScope</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EmailVerifiedAtScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 移除全局作用域</span>
<span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">withoutGlobalScope</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;email_verified_at_scope&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// 局部作用域</span>
<span class="token comment">// 模型类中编写，scopePopular 对应 popular</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">scopePopular</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Builder</span> <span class="token variable">$query</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;desc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$post</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">popular</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 动态作用域， 可以传如想要的type</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">scopeOfType</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Builder</span> <span class="token variable">$query</span><span class="token punctuation">,</span> <span class="token variable">$type</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">,</span> <span class="token variable">$type</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$posts</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">active</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">ofType</span><span class="token punctuation">(</span><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token constant">Article</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-模型事件和监听方式" tabindex="-1"><a class="header-anchor" href="#_8-模型事件和监听方式" aria-hidden="true">#</a> 8. 模型事件和监听方式</h3><h3 id="_9-关联关系-连表查询" tabindex="-1"><a class="header-anchor" href="#_9-关联关系-连表查询" aria-hidden="true">#</a> 9. 关联关系,连表查询</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// hasOne</span>
<span class="token comment">// 关联另一个表模型， select * from userprofile</span>
<span class="token comment">// public function hasOne($related, $foreignKey = null, $localKey = null)，</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// params： 关联的表模型， 关联表用于连接的key，本表用于连接的key</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">hasOne</span><span class="token punctuation">(</span><span class="token class-name static-context">UserProfile</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;foreignKey&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;localKey&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 反查所属模型，belongsTo</span>
<span class="token comment">// public function belongsTo($related, $foreignKey = null, $ownerKey = null, $relation = null)</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// params：关联的表，本表用于连接的key，关联表用于连接的key， 对应关联关系方法名</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">belongsTo</span><span class="token punctuation">(</span><span class="token class-name static-context">UserProfile</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 一对多 hasMany ，参数同上</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">posts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// params： 关联的表模型， 关联表用于连接的key，本表用于连接的key</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">hasMany</span><span class="token punctuation">(</span><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 多对多 belongsToMany， 通过本表的key找到中间表，然后中间表的关联key找到对应的关联表</span>
<span class="token comment">// public function belongsToMany($related, $table = null, $foreignPivotKey = null, $relatedPivotKey = null, $parentKey = null, $relatedKey = null, $relation = null)</span>
<span class="token comment">// params：关联表类，中间表名，中间表的查询key，中间表对应关联表的key， 本表的key，关联表的key</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-渴求式加载" tabindex="-1"><a class="header-anchor" href="#_10-渴求式加载" aria-hidden="true">#</a> 10. 渴求式加载</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 先在模型里关联author</span>
<span class="token variable">$posts</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;views&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19);function _($,D){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",r,[s("入门"),t(a)]),n("a",k,[s("门面列表"),t(a)])]),d,n("p",null,[n("a",v,[s("参考"),t(a)])]),g,n("p",null,[s("routes 目录下 Route 类设置函数 "),n("a",m,[s("路由教程"),t(a)])]),b,n("p",null,[n("a",h,[s("验证规则文档"),t(a)]),s(" 写入路由应该有@csrf 验证")]),f,n("p",null,[n("a",q,[s("复杂的 sql"),t(a)])]),w,n("p",null,[s("支持 DB 类的各种方法 "),n("a",y,[s("Eloquent 模型"),t(a)])]),x])}const R=e(l,[["render",_],["__file","laravel入门.html.vue"]]);export{R as default};
