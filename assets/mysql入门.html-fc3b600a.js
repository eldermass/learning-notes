import{_ as n,Y as s,Z as a,a0 as e}from"./framework-6d304b95.js";const p={},t=e(`<h1 id="mysql-入门" tabindex="-1"><a class="header-anchor" href="#mysql-入门" aria-hidden="true">#</a> Mysql 入门</h1><h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 打开服务, 或者直接在服务管理中打开</span>
net start mysql58
<span class="token comment"># 连接数据库</span>
    <span class="token comment"># sock连接</span>
mysql -S/tmp/mysql.sock <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>
    <span class="token comment"># ip连接</span>
mysql <span class="token parameter variable">-h127.0.0.1</span> <span class="token parameter variable">-p3306</span> <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>  <span class="token comment"># 之后键入密码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="操作数据库" tabindex="-1"><a class="header-anchor" href="#操作数据库" aria-hidden="true">#</a> 操作数据库</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">--  创建</span>
<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> dbname <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci
<span class="token comment">-- 查看数据库</span>
<span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span>                    <span class="token comment">-- 显示所有数据库</span>
<span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASES</span> dbname      <span class="token comment">-- 显示某一数据库</span>
<span class="token comment">-- 使用某一数据库</span>
<span class="token keyword">USE</span> dbname
<span class="token comment">-- 删除某一数据库</span>
<span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> dbname
<span class="token comment">-- 修改数据库</span>
<span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> dbname <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8
<span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> dbname utf8_general_ci
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="操作数据表" tabindex="-1"><a class="header-anchor" href="#操作数据表" aria-hidden="true">#</a> 操作数据表</h2><h3 id="ddl-data-definition-language" tabindex="-1"><a class="header-anchor" href="#ddl-data-definition-language" aria-hidden="true">#</a> DDL(Data Definition language)</h3><p>DDL 主要有 CREATE、 ALTER 、DROP</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查看创建表的信息</span>
<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> table_name
<span class="token comment">-- 表的增删查改</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tablename
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> EXIST tablename<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">unsigned</span><span class="token punctuation">)</span><span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">ENGINE</span> MYISAM
<span class="token comment">-- 注：MyISAM效率更高不支持高级事务处理、InnoDB则相反</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> a <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> b
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> tablename
<span class="token comment">-- 重置auto_increment</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> table_name<span class="token punctuation">;</span>
<span class="token comment">-- 列的增删查改</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> tablename <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> newcol <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> tablename <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> col <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> tablename CHANGE col newCol <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> tablename <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> col
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> tablename <span class="token keyword">ENGINE</span> <span class="token operator">=</span> myisam
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dml-data-manipulation-language" tabindex="-1"><a class="header-anchor" href="#dml-data-manipulation-language" aria-hidden="true">#</a> DML(data manipulation language)</h3><p>DML 主要有 SELECT 、UPDATE 、INSERT、 DELETE</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 插入数据 INSERT</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tablename <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>’Jack’<span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tablename<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>’Jack’<span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token comment">-- ③ 带占位符的插入语句</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tablename<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>?<span class="token punctuation">,</span>?<span class="token punctuation">,</span>?<span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span>’Jack’<span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>

<span class="token comment">-- 查询数据 SELECT</span>
<span class="token comment">-- SELECT 的四大子句(有顺序&gt;)  WHERE　 GROUP  LIMIT  ORDER</span>
<span class="token keyword">LIMIT</span> （<span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token number">20</span>   <span class="token punctuation">(</span>偏移量，搜索条数<span class="token punctuation">)</span>
<span class="token comment">-- 一般查询</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tablename         <span class="token comment">-- 找查所有</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>age <span class="token keyword">FROM</span> tablename  <span class="token comment">-- 定量查询</span>
<span class="token comment">-- 条件查询</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tablename <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span>
<span class="token comment">-- 限量查询</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> tablename <span class="token keyword">LIMIT</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token punctuation">(</span>偏移量，取n条<span class="token punctuation">)</span>
<span class="token comment">-- 过滤重复name</span>
<span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> name <span class="token keyword">FROM</span> tablename
<span class="token comment">-- 聚类-合并相同：（统计每个班的人数）</span>
<span class="token keyword">SELECT</span> class<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span>class<span class="token punctuation">)</span> <span class="token keyword">FROM</span> tablename <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> class
<span class="token comment">-- 多条件筛选：</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>English<span class="token operator">+</span>math<span class="token operator">+</span>Chinese <span class="token keyword">as</span> ‘总分’ <span class="token keyword">FROM</span> tablename <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>English <span class="token operator">+</span>math <span class="token operator">+</span> Chinese<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">200</span>
<span class="token comment">-- and表示同时满足 between 表示在之间闭区间</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>English <span class="token keyword">FROM</span> tablename <span class="token keyword">WHERE</span> English <span class="token operator">&lt;</span> <span class="token number">90</span> <span class="token operator">and</span> English <span class="token operator">&gt;</span> <span class="token number">60</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>English <span class="token keyword">FROM</span> tablename <span class="token keyword">WHERE</span> English <span class="token operator">between</span> <span class="token number">60</span> <span class="token operator">and</span> <span class="token number">90</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>English <span class="token keyword">FROM</span> tablename <span class="token keyword">WHERE</span> English <span class="token operator">=</span><span class="token number">60</span> <span class="token operator">or</span> English <span class="token operator">=</span> <span class="token number">45</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>English <span class="token keyword">FROM</span> tablename <span class="token keyword">WHERE</span> English <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span>
<span class="token comment">-- 模糊查询</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>English <span class="token keyword">FROM</span> tablename <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> ‘张<span class="token operator">%</span>’<span class="token punctuation">;</span>  <span class="token operator">%</span>代表一或多个
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> info <span class="token keyword">where</span> name <span class="token operator">regexp</span> <span class="token string">&#39;^L&#39;</span><span class="token punctuation">;</span> <span class="token comment">-- 以L开头的</span>
<span class="token comment">-- 排序</span>
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>age <span class="token keyword">FROM</span> tablename <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> name<span class="token punctuation">,</span>age <span class="token punctuation">[</span><span class="token keyword">asc</span>\\<span class="token keyword">desc</span><span class="token punctuation">]</span> <span class="token comment">-- 升序\\降序</span>
例：
<span class="token keyword">SELECT</span> name<span class="token punctuation">,</span>English<span class="token operator">+</span>math<span class="token operator">+</span>Chinese <span class="token keyword">as</span> total <span class="token keyword">FROM</span> stu <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> ‘李<span class="token operator">%</span>’ <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">DESC</span>

<span class="token comment">-- 修改数据 UPDATE</span>
<span class="token keyword">UPDATE</span> tablename <span class="token keyword">SET</span> age <span class="token operator">=</span> <span class="token number">24</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> ‘Kimmy’
<span class="token keyword">UPDATE</span> tablename <span class="token keyword">SET</span> age <span class="token operator">=</span> age <span class="token operator">+</span> <span class="token number">1</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">2</span>

<span class="token comment">-- 删除数据  DROP</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> tablename               <span class="token comment">-- 删除表中所有</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> tablename <span class="token keyword">WHERE</span> id<span class="token operator">=</span><span class="token number">1</span>    <span class="token comment">-- 删除id为1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="备份" tabindex="-1"><a class="header-anchor" href="#备份" aria-hidden="true">#</a> 备份</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- mysqldump -uroot -p DBname &gt; 存放路径</span>
例：mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p test <span class="token operator">&gt;</span> d:<span class="token operator">/</span>test<span class="token punctuation">.</span><span class="token keyword">sql</span>
<span class="token comment">-- 恢复数据库</span>
切换到一个空库，mysql <span class="token operator">&gt;</span> source d:<span class="token operator">/</span>test<span class="token punctuation">.</span>bak
<span class="token comment">-- 备份数据表</span>
mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p DBname table1 table2 <span class="token operator">&gt;</span> d:<span class="token operator">/</span>test<span class="token punctuation">.</span>bak
<span class="token comment">-- 在库中恢复表</span>
source d:<span class="token operator">/</span>test<span class="token punctuation">.</span>bak
<span class="token comment">-- -B 表示在恢复数据时，自动创建空数据库</span>
mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p <span class="token operator">-</span>B 数据库<span class="token number">1</span> 数据库<span class="token number">2</span> <span class="token operator">&gt;</span>d:<span class="token operator">/</span>test<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><h3 id="事务" tabindex="-1"><a class="header-anchor" href="#事务" aria-hidden="true">#</a> 事务</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">start</span> <span class="token keyword">transaction</span>
<span class="token keyword">set</span> autocommit<span class="token operator">=</span><span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="内外联查找" tabindex="-1"><a class="header-anchor" href="#内外联查找" aria-hidden="true">#</a> 内外联查找</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> t1<span class="token punctuation">.</span>id<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>title<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>state<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>title <span class="token keyword">as</span> cate <span class="token keyword">FROM</span> table1 t1 <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> table2 t2 <span class="token keyword">ON</span> t1<span class="token punctuation">.</span>category_id<span class="token operator">=</span>t2<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token comment">-- 注释left 意味着左边(前)保持满编,right意味着右边(后)保持满编</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="排序时-把-null-值排到最后" tabindex="-1"><a class="header-anchor" href="#排序时-把-null-值排到最后" aria-hidden="true">#</a> 排序时，把 null 值排到最后</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 意思是，当 User_NO 是 null 的时候， 就把User_NO 当作1，否则就是0。 然后再按 User_NO 排序</span>
<span class="token keyword">select</span> UserInfoID<span class="token punctuation">,</span>User_No<span class="token punctuation">,</span>User_Names
<span class="token keyword">from</span> UserInfo
<span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token keyword">case</span> <span class="token keyword">when</span> User_NO <span class="token operator">is</span> <span class="token boolean">null</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span> <span class="token keyword">asc</span><span class="token punctuation">,</span>User_NO <span class="token keyword">asc</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 如果 distance 是 null 就当作 99999 否则就是 distance 本来的值</span>
<span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">Raw</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;case when distance is null then 99999999999 else distance end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;ASC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="指令" tabindex="-1"><a class="header-anchor" href="#指令" aria-hidden="true">#</a> 指令</h3><ol><li>？ create 对于模糊不清的指令的查询</li><li>\\s 查看数据库信息</li><li>show variables like ‘character%’ 查看各种数据类型</li><li>/<em>!40100 default 、、、、</em>/ 当版本大于 4.01 时就执行里面的那</li><li>show processlist 查看 mysql 连接情况</li></ol><h2 id="类型" tabindex="-1"><a class="header-anchor" href="#类型" aria-hidden="true">#</a> 类型</h2><h3 id="int-类型" tabindex="-1"><a class="header-anchor" href="#int-类型" aria-hidden="true">#</a> int 类型</h3><p>tinyint、smallint、mediumint、int 、bigint tinyint： 有符号数范围 1000 0000 0000 0000 （负零，正零）27=128 所以有符号数的范围是-128-127，无符号是 0-255； 注：这里 int(6) 里的 6 表示现实宽度，需要配合 zerofill 例如 int（6） unsigned zerofill 显示 000001</p><h3 id="单精度浮点型-float-m-d" tabindex="-1"><a class="header-anchor" href="#单精度浮点型-float-m-d" aria-hidden="true">#</a> 单精度浮点型 float(M,D)</h3><p>M:总长度 D:小数位长度 例如:float(4,2) 范围在-99.99~99.99， 之后的小数位会四舍五入，且四舍五入后不会超过上面范围</p><h3 id="定点数-decimal-m-d" tabindex="-1"><a class="header-anchor" href="#定点数-decimal-m-d" aria-hidden="true">#</a> 定点数 Decimal(M,D)</h3><p>M:总长度 D:小数位长度 浮点型的精确度在 7 位小数， 定点数在 30 位左右</p><h3 id="字符串-char-n" tabindex="-1"><a class="header-anchor" href="#字符串-char-n" aria-hidden="true">#</a> 字符串 char(n)</h3><p>n 表示字符的长度 最长可以表示 255 个字节，char 是定长总是分配四个长度空间，尾部空格会丢失（一般用于 md5 32 位加密）</p><h3 id="字符串-varchar-n" tabindex="-1"><a class="header-anchor" href="#字符串-varchar-n" aria-hidden="true">#</a> 字符串 varchar(n)</h3><p>n 表示字符的长度 最长可以表示 65532 字节，所以 n&lt;=65532/3 ，varchar 是变长，是实际占用空间 L+1 个长度 （一般用于留言、文章） Uft-8 下一个字符 3 个字节，gbk 下一个字符 2 个字节</p><h3 id="text-类型" tabindex="-1"><a class="header-anchor" href="#text-类型" aria-hidden="true">#</a> Text 类型</h3><p>类似与 varchar</p><h3 id="date-类型" tabindex="-1"><a class="header-anchor" href="#date-类型" aria-hidden="true">#</a> Date 类型</h3><p>年月日</p><h3 id="datetime-类型" tabindex="-1"><a class="header-anchor" href="#datetime-类型" aria-hidden="true">#</a> Datetime 类型</h3><p>年月日时分秒 T### imestamp 类型： 时间戳，根性，添加时会自动更新</p><h3 id="枚举类型-enum-set" tabindex="-1"><a class="header-anchor" href="#枚举类型-enum-set" aria-hidden="true">#</a> 枚举类型 enum，set</h3><p>hobby set(‘苹果’，‘香蕉’，‘草莓’) 找查含有苹果项时 select *from t1 where find_in_set(‘苹果’，hobby)；</p><h3 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> json</h3>`,44),o=[t];function l(c,i){return s(),a("div",null,o)}const d=n(p,[["render",l],["__file","mysql入门.html.vue"]]);export{d as default};
