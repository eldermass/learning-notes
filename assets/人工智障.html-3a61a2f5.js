import{_ as e,Y as p,Z as o,a1 as n,a2 as s,a3 as i,a0 as a,E as c}from"./framework-6d304b95.js";const l="/learning-notes/assets/回归1-46cd28ba.png",u="/learning-notes/assets/回归2-12550a2b.png",r="/learning-notes/assets/回归3-265cf9d4.png",d="/learning-notes/assets/回归4-78b988fc.png",k="/learning-notes/assets/分类1-17d0a12d.png",m="/learning-notes/assets/分类2-9924d332.png",v="/learning-notes/assets/逻辑回归1-60080ed9.png",b="/learning-notes/assets/逻辑回归2-aa72d32a.png",h="/learning-notes/assets/逻辑回归31-079f9974.png",_="/learning-notes/assets/逻辑回归3-f6eb4e8e.png",g={},y=a('<h1 id="人工智障" tabindex="-1"><a class="header-anchor" href="#人工智障" aria-hidden="true">#</a> 人工智障</h1><h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始" aria-hidden="true">#</a> 开始</h2><ol><li>pycharm 可以打开科学模式，并使用 <code>#%%</code> 来使用代码块执行，可以保留之前执行过的上下文</li><li>matplotlib 是数据可视化的库，numpy 用于科学计算的包，pandas 处理数据的包，scikit-learn 机器学习的算法库</li><li>监督学习：包含正确结果。线性回归，逻辑回归，决策树，神经网络，卷积神经网络，循环神经网络</li><li>无监督学习：不包含，聚类算法</li><li>混合学习：半监督学习</li><li>强化学习：根据奖惩学习优化</li></ol><h2 id="回归" tabindex="-1"><a class="header-anchor" href="#回归" aria-hidden="true">#</a> 回归</h2><p><img src="'+l+'" alt="回归"></p><h3 id="线性回归" tabindex="-1"><a class="header-anchor" href="#线性回归" aria-hidden="true">#</a> 线性回归</h3>',6),f=n("li",null,"例如房价问题，择线性模型 y = ax + b",-1),x=n("li",null,[s("假设 x 为变量，y 为结果，模型输出结果 y'= xa + b, 则只需要求 y 和 y'的差的平方和为最小值。 "),n("img",{src:u,alt:"回归"})],-1),w=n("code",null,"损失函数",-1),E={href:"https://zhuanlan.zhihu.com/p/58883095",target:"_blank",rel:"noopener noreferrer"},R=n("li",null,[s("损失函数的最小值可以通过"),n("code",null,"梯度下降法"),s("求解，其实"),n("code",null,"梯度下降法"),s("是根据 p1 的斜率计算 p1+α 的值，在求得这个值在 f(p2)时对应的 p2 的值。 "),n("img",{src:r,alt:"回归"}),n("img",{src:d,alt:"回归"})],-1),S=n("li",null,[s("评估模型 "),n("ul",null,[n("li",null,"均方误差：MES。小"),n("li",null,"R 方值：R²=1 - MES/方差。近 1"),n("li",null,"绘图展示")])],-1),q=a(`<h4 id="单因子线性回归" tabindex="-1"><a class="header-anchor" href="#单因子线性回归" aria-hidden="true">#</a> 单因子线性回归</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#%%</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment"># 读取数据</span>
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;./ai/data/linear.csv&quot;</span><span class="token punctuation">)</span>
data<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>
<span class="token comment"># print(data)</span>

<span class="token comment"># 赋值x y</span>
x <span class="token operator">=</span> data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> data<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>

<span class="token comment">#%%</span>
<span class="token comment"># visualize data 展示散点图</span>
<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plot
plot<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
plot<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
plot<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">#%% 建立模型 set up regression model</span>
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LinearRegression
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
lr <span class="token operator">=</span> LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 转换数据维度</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># -1不变，1为补充</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 拟合模型</span>
lr<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
a <span class="token operator">=</span> lr<span class="token punctuation">.</span>coef_
b <span class="token operator">=</span> lr<span class="token punctuation">.</span>intercept_
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;a is {}, b is {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 预测</span>
predict <span class="token operator">=</span> lr<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token comment"># print(&#39;predict y is {}&#39;.format(predict))</span>

<span class="token comment">#%% 评估误差</span>
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> mean_squared_error<span class="token punctuation">,</span> r2_score
MSE <span class="token operator">=</span> mean_squared_error<span class="token punctuation">(</span>y<span class="token punctuation">,</span> predict<span class="token punctuation">)</span>
R2 <span class="token operator">=</span> r2_score<span class="token punctuation">(</span>y<span class="token punctuation">,</span> predict<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>MSE<span class="token punctuation">,</span> R2<span class="token punctuation">)</span>
plot<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
plot<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> predict<span class="token punctuation">)</span>
plot<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="逻辑回归" tabindex="-1"><a class="header-anchor" href="#逻辑回归" aria-hidden="true">#</a> 逻辑回归</h3><h4 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h4><p>根据已知样本的特征，判断新的样本属于哪一只已知的类别，例如：垃圾邮件分类，图像识别，数字识别，通过结果预测。 <img src="`+k+'" alt="分类"><img src="'+m+'" alt="分类"></p><h5 id="逻辑回归分类" tabindex="-1"><a class="header-anchor" href="#逻辑回归分类" aria-hidden="true">#</a> 逻辑回归分类</h5><p>分类的方式之一，1.首先计算数学模型，即概率分布函数，sigmoid 函数 f(x) 2.然后根据 f(x)值的区间，推导属于的类别。 <img src="'+v+'" alt="逻辑回归"> 当输入维度增加时，用 g(x)来替换 x，意味着要先求出 x 之间的边界关系(决策边界 decision boundray) <img src="'+b+'" alt="逻辑回归"></p><ol><li>逻辑回归首要任务就是要计算出决策边界，即使所有样本的损失函数最小。 <img src="'+h+'" alt="逻辑回归"><img src="'+_+'" alt="逻辑回归"></li></ol>',8);function L(M,N){const t=c("ExternalLinkIcon");return p(),o("div",null,[y,n("ol",null,[f,x,n("li",null,[s("为方便求解除以 2 倍样本数量：2m，就可转换成求"),w,s("的最小值， "),n("a",E,[s("损失函数？"),i(t)])]),R,S]),q])}const z=e(g,[["render",L],["__file","人工智障.html.vue"]]);export{z as default};
