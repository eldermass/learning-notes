import{_ as n,o as s,c as a,d as e}from"./app.4b7e0070.js";const p={},t=e(`<h1 id="\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u6B63\u5219\u8868\u8FBE\u5F0F</h1><h2 id="\u57FA\u7840\u77E5\u8BC6" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u77E5\u8BC6" aria-hidden="true">#</a> \u57FA\u7840\u77E5\u8BC6</h2><h3 id="\u521B\u5EFA\u548C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u548C\u4F7F\u7528" aria-hidden="true">#</a> \u521B\u5EFA\u548C\u4F7F\u7528</h3><p>\u5B9E\u4F8B\u5316\u548C\u5B57\u9762\u91CF\u521B\u5EFA \u4E24\u79CD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">asd</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B57\u7B26\u4E32\u65B9\u6CD5\u6709\uFF1Amatch replace search split</span>
<span class="token string">&#39;string&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">str</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u6B63\u5219\u5BF9\u8C61\u7684\u65B9\u6CD5: test  exec</span>
<span class="token operator">/</span>str<span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u6B63\u5219\u5BF9\u8C61\u7684\u5C5E\u6027\uFF1AlastIndex, global, ignoreCase, multiline, source \u6E90</span>
<span class="token comment">// lastIndex   \u4F5C\u4E3A\u6E38\u6807 \uFF0C\u8BB0\u5F55exec\u65B9\u6CD5\u5168\u5C40\u5339\u914D\u65F6\uFF0C\u6BCF\u6B21\u5F00\u59CB\u7684\u4F4D\u7F6E</span>
<span class="token comment">// \u5168\u5C40\u5339\u914D\u65F6\uFF0C\u6E38\u6807\u4F1A\u5411\u540E\u79FB\uFF0C\u76F4\u5230\u5339\u914D\u6210\u529F\u540E\u505C\u6B62\uFF0C\u4E4B\u540E\u6267\u884Cexec\u4F1A\u4ECE\u6E38\u6807\u4F4D\u7F6E\u5F00\u59CB\u5339\u914D, \u4F1A\u5305\u542B\u5B50\u8868\u8FBE\u5F0F</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E00\u822C\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u4E00\u822C\u89C4\u5219" aria-hidden="true">#</a> \u4E00\u822C\u89C4\u5219</h4><h4 id="\u5F00\u59CB\u7ED3\u675F" tabindex="-1"><a class="header-anchor" href="#\u5F00\u59CB\u7ED3\u675F" aria-hidden="true">#</a> \u5F00\u59CB\u7ED3\u675F</h4><p>^ \u5F00\u59CB, $ \u7ED3\u675F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4EE5n\u5F00\u59CB</span>
<span class="token operator">/</span><span class="token operator">^</span>n<span class="token operator">/</span>
<span class="token comment">// \u4EE5n\u7ED3\u5C3E</span>
<span class="token operator">/</span>n$<span class="token operator">/</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6216" tabindex="-1"><a class="header-anchor" href="#\u6216" aria-hidden="true">#</a> \u6216</h4><p>[] \u5339\u914D\u5355\u4E2A\u5B57\u7B26, () \u5339\u914D\u4E00\u7EC4\u5B57\u7B26</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^a|^b]</span><span class="token regex-delimiter">/</span></span>            <span class="token comment">// \u975Ea\u6216\u975Eb</span>
<span class="token operator">/</span><span class="token punctuation">(</span>abc<span class="token operator">|</span>bcd<span class="token punctuation">)</span><span class="token operator">/</span>          <span class="token comment">// abd \u6216 bcd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u91CF\u8BCD" tabindex="-1"><a class="header-anchor" href="#\u91CF\u8BCD" aria-hidden="true">#</a> \u91CF\u8BCD</h4><p>\u9ED8\u8BA4\uFF1A\u8D2A\u5A6A\u5339\u914D\uFF0C\u80FD\u591A\u5C31\u4E0D\u5C11, \u5728\u91CF\u8BCD\u540E\u52A0<code>?</code>\u8868\u793A\u5F00\u542F\u975E\u8D2A\u5A6A\u6A21\u5F0F\uFF0C\u80FD\u5C11\u5C31\u4E0D\u591A,\u4F8B\u5982\uFF1A/n{x,y}?/</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//     </span>
<span class="token comment">//     n+      {1,}</span>
<span class="token comment">//     n*      {0,}</span>
<span class="token comment">//     n?      {0,1}</span>
<span class="token comment">//     n{x}    x\u4E2A</span>
<span class="token comment">//     n{x,y}  x\u5230y\u4E2A</span>
<span class="token comment">//     n{x,}   \u5927\u4E8Ex\u4E2A</span>

<span class="token operator">/</span>n<span class="token punctuation">{</span>x<span class="token punctuation">,</span>y<span class="token punctuation">}</span><span class="token operator">?</span><span class="token operator">/</span>   <span class="token comment">// \u975E\u8D2A\u5A6A\u5339\u914D x\u5230y\u4E2An</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="unicode-\u7F16\u7801" tabindex="-1"><a class="header-anchor" href="#unicode-\u7F16\u7801" aria-hidden="true">#</a> uniCode \u7F16\u7801</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// uniCode\u7F16\u7801      \\u000000   4\u4F4D16\u8FDB\u5236\u6570\u5B57</span>
<span class="token comment">// \u7B2C\u4E00\u5C42\u533A\u95F4 \\u010000 -\\u01ffff</span>
<span class="token comment">// \u7B2C16\u5C42\u533A\u95F4 \\u100000 -\\u10ffff</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5143\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5143\u5B57\u7B26" aria-hidden="true">#</a> \u5143\u5B57\u7B26</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5143\u5B57\u7B26</span>
<span class="token comment">/*
    .                           \u4E00\u5207
    /d = [0-9]                  \\D = [^\\d]
    \\w = [0-9A-z_]              \\W = [^\\w]
    \\s = [\\n|\\f|\\r|\\t|\\v| ]     \\S = [^\\s]   \u7A7A\u767D\u5B57\u7B26
    \\b \u5355\u8BCD\u8FB9\u754C                  \\B \u975E\u5355\u8BCD\u8FB9\u754C
    \\uxxxx                      uniCode\u5339\u914D
    reg = /\\u8001/              \u80FD\u5339\u914D\u6C49\u5B57  &#39;\u8001&#39;
 * */</span>
str <span class="token operator">=</span> <span class="token string">&#39;i am tree&#39;</span>
reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\bam\\b</span><span class="token regex-delimiter">/</span></span>

<span class="token comment">// \u7279\u6B8A\u7B26\u53F7</span>
<span class="token comment">/*
    \u8F6C\u4E49\u7B26\u53F7    \\
    \u7ED3\u675F\u884C      \\r
    \u6362\u884C        \\n  
    \u5236\u8868\u7B26\uFF0C\u7F29\u8FDB \\t
 * */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4FEE\u9970\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u9970\u7B26" aria-hidden="true">#</a> \u4FEE\u9970\u7B26</h3><p>i \u5FFD\u7565\u5927\u5C0F\u5199 , g \u5168\u5C40\u5339\u914D , m \u591A\u884C\u5339\u914D, d indices \u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6362\u53F7\u5339\u914D\u65F6\u80FD\u5339\u914D\u5230\uFF0C\u4E24\u4E2A a</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^a</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gm</span></span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;absnd\\nads&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6B63\u5411\u9884\u67E5" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5411\u9884\u67E5" aria-hidden="true">#</a> \u6B63\u5411\u9884\u67E5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* \u6B63\u5411\u9884\u67E5
    ?:n      \u5305\u542B\u62EC\u53F7\u4E2D\u7684\u8868\u8FBE\u5F0F
    ?=n      let reg = /a(?=bb)/  \u627E\u67E5\u8DDF\u7740\u4E24\u4E2Ab\u7684a
    ?!n      let reg = /a(?!bb)/  \u627E\u67E5\u6CA1\u6709\u8DDF\u7740\u4E24\u4E2Ab\u7684a
 * */</span>

<span class="token comment">// \u4F8B\u5982\uFF1A</span>
<span class="token punctuation">;</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(.(?![@#$%\uFFE5\u2026]))*$</span><span class="token regex-delimiter">/</span></span> <span class="token comment">// \u6B63\u5411\u53CD\u9884\u67E5\uFF0C\u4E0D\u5305\u542B\u67D0\u4E9B\u5B57\u7B26\u7684\u5B57\u7B26\u4E32</span>
<span class="token comment">// \u4F8B\u5982\uFF1A</span>
<span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">&#39;windows 98 is ok&#39;</span>
data<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">windows (?=\\d+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token comment">// [&quot;windows &quot;]</span>
data<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">windows (?:\\d+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token comment">// [&quot;windows 98&quot;]</span>
data<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">windows (\\d+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token comment">// [&quot;windows 98&quot;, &quot;98&quot;]</span>
<span class="token comment">// \u4F8B\u5982\uFF1A   \u5229\u7528\u4E86\u96F6\u5BBD\u7A7A\u767D\u5B57\u7B26</span>
str <span class="token operator">=</span> <span class="token string">&#39;hello&amp;nbsp;&amp;test1;test&amp;qout;&#39;</span>
str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;((?!test).)+;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span> <span class="token comment">// [&quot;&amp;nbsp;&quot;, &quot;&amp;qout;&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53CD\u5411\u9884\u67E5" tabindex="-1"><a class="header-anchor" href="#\u53CD\u5411\u9884\u67E5" aria-hidden="true">#</a> \u53CD\u5411\u9884\u67E5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* \u53CD\u5411\u9884\u67E5 \u53CA\u540E\u884C\u65AD\u8A00 es10
    ?&lt;=         /(?&lt;=bb)a/  \u627E\u524D\u9762\u6709\u4E24\u4E2Ab\u7684a

    (?&lt;\u2026)\u662F\u540E\u884C\u65AD\u8A00\u7684\u7B26\u53F7\uFF0C(?..)\u662F\u5148\u884C\u65AD\u8A00\u7684\u7B26\u53F7\uFF0C\u7136\u540E\u7ED3\u5408 :(\u5305\u542B)\u3001=(\u7B49\u4E8E)\u3001!(\u4E0D\u7B49)\u3001\\1(\u6355\u83B7\u5339\u914D)\u3002
 * */</span>

<span class="token comment">// \u4F8B\u5982\uFF1A       \u627E\u5230\u8DDF\u5728world\u540E\u9762\u7684\u5355\u8BCD</span>
<span class="token keyword">let</span> test <span class="token operator">=</span> <span class="token string">&#39;world hello&#39;</span>
test<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;=world\\s)\\w+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span> <span class="token comment">// [&quot;hello&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53CD\u5411\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u53CD\u5411\u5F15\u7528" aria-hidden="true">#</a> \u53CD\u5411\u5F15\u7528</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* \u53CD\u5411\u5F15\u7528
    let reg = /(\\w)\\1/g     \\1\u53CD\u5411\u5F15\u7528\u7B2C\u4E00\u4E2A\u5B50\u8868\u8FBE\u5F0F(\u7B2C\u4E00\u4E2A\u62EC\u53F7\u5185\u7684)\u7684\u5185\u5BB9
 * */</span>
<span class="token comment">// \u4F8B\u5982</span>
<span class="token string">&#39;aabb&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\w)\\1(\\w)\\2</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$2$2$1$1&#39;</span><span class="token punctuation">)</span> <span class="token comment">//  :aabb -&gt; bbaa</span>
<span class="token string">&#39;aabb&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\w)\\1(\\w)\\2</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$<span class="token punctuation">,</span> $1<span class="token punctuation">,</span> $2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> $2 <span class="token operator">+</span> $2 <span class="token operator">+</span> $1 <span class="token operator">+</span> $1
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1.\u4EE5\u524D\u53CD\u5411\u5F15\u7528\u5B50\u8868\u8FBE\u5F0F\u7684\u505A\u6CD5\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str2 <span class="token operator">=</span> <span class="token string">&#39;welcome-welcome-welcame&#39;</span>
<span class="token keyword">let</span> reg2 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(welcome)(-)\\1\\2</span><span class="token regex-delimiter">/</span></span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// welcome-welcome-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.\u65B0 es \u6807\u51C6\u91CC\u53EF\u4EE5\u901A\u8FC7\u547D\u540D\u6355\u83B7\u6765\u53CD\u5411\u5F15\u7528, \u53EA\u9700\u8981 \\k&lt;\u522B\u540D&gt;\u5C31\u597D\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str2 <span class="token operator">=</span> <span class="token string">&#39;welcome-welcome-welcame&#39;</span>
<span class="token keyword">let</span> reg2 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;wel&gt;welcome)-\\k&lt;wel&gt;-</span><span class="token regex-delimiter">/</span></span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// welcome-welcome-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u547D\u540D\u6355\u83B7" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D\u6355\u83B7" aria-hidden="true">#</a> \u547D\u540D\u6355\u83B7</h3><ol><li>(?&lt;\u522B\u540D&gt;) \u5728\u6B63\u5219\u8868\u8FBE\u5F0F\u4E2D\u4EE5\u8FD9\u6837\u7684\u5F62\u52BF\u5C31\u80FD\u7ED9\u5B50\u8868\u8FBE\u5F0F\u53D6\u4E00\u4E2A\u522B\u540D\uFF0C\u4EE5\u83B7\u5F97\u66F4\u597D\u7684\u4EE3\u7801\u53EF\u8BFB\u6027 <blockquote><p>\u73B0\u5728\u6709\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C&#39;2018-09-06&#39;\uFF0C\u6211\u9700\u8981\u5206\u522B\u83B7\u53D6\u4ED6\u7684\u5E74\u6708\u65E5\uFF0C\u4EE5\u524D\u7684\u505A\u6CD5\u5C31\u662F\uFF1A</p></blockquote></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;2018-09-06&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d{4})-(\\d{2})-(\\d{2})</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4F46\u662F\u73B0\u5728\u65B0\u7248\u7684 es \u4E2D\u63D0\u4F9B\u4E86\u4E00\u4E2A\u66F4\u52A0\u4FBF\u4E8E\u7406\u89E3\u7684\u65B9\u6CD5,\u73B0\u5728\u5F88\u591A\u6D4F\u89C8\u5668\u8FD8\u4E0D\u652F\u6301\uFF0C\u65B0\u7248\u8C37\u6B4C\u53EF\u7528</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;2018-09-06&#39;</span>
<span class="token keyword">let</span> reg1 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;year&gt;\\d{4})-(?&lt;month&gt;\\d{2})-(?&lt;day&gt;\\d{2})</span><span class="token regex-delimiter">/</span></span>

<span class="token keyword">let</span> arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg1<span class="token punctuation">)</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day <span class="token punctuation">}</span> <span class="token operator">=</span> arr<span class="token punctuation">.</span>groups
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u547D\u540D\u6355\u83B7\u5728-replace-\u4E2D\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D\u6355\u83B7\u5728-replace-\u4E2D\u7684\u4F7F\u7528" aria-hidden="true">#</a> \u547D\u540D\u6355\u83B7\u5728 replace \u4E2D\u7684\u4F7F\u7528</h4><blockquote><p>\u4E4B\u524D\u7684\u505A\u6CD5</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;2018-09-06&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d{4})-(\\d{2})-(\\d{2})</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">let</span> str1 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">&#39;$2/$3/$1&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span> <span class="token comment">// 09/06/2018</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>es2018 \u7684\u505A\u6CD5</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;2018-09-06&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;year&gt;\\d{4})-(?&lt;month&gt;\\d{2})-(?&lt;day&gt;\\d{2})</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">let</span> newstr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token string">&#39;$&lt;month&gt;/$&lt;day&gt;/$&lt;year&gt;&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newstr<span class="token punctuation">)</span> <span class="token comment">// 09/06/2018</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5F53\u7136 replace \u7684\u56DE\u6389\u51FD\u6570\u65B9\u5F0F\u4E5F\u662F\u53EF\u4EE5\u5B9E\u73B0\u7684</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;2018-09-06&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;year&gt;\\d{4})-(?&lt;month&gt;\\d{2})-(?&lt;day&gt;\\d{2})</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">let</span> str2 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day <span class="token punctuation">}</span> <span class="token operator">=</span> args<span class="token punctuation">[</span>args<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>year<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>month<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>day<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span> <span class="token comment">// 2018/09/06</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h2><p>\u628A the-first-name \u53D8\u4E3A\u5C0F\u9A7C\u5CF0\u5F0F\u5199\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u89E3\u6CD5\u4E00</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([a-z]+)-([a-z]+)-([a-z]+)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token keyword">let</span> result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$<span class="token punctuation">,</span> $1<span class="token punctuation">,</span> $2<span class="token punctuation">,</span> $3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$1<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> $1 <span class="token operator">+</span> $2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> $2<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> $3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> $3<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u89E3\u6CD5\u4E8C</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-(\\w)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token keyword">let</span> result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$<span class="token punctuation">,</span> $1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u6BCF\u6B21\u5339\u914D\u5230\u7684\u5B50\u8868\u8FBE\u5F0F,\u6BCF\u5339\u914D\u4E00\u6B21\u90FD\u4F1A\u6267\u884C\u4E00\u6B21\u56DE\u6389\u51FD\u6570</span>
    <span class="token keyword">return</span> $1<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5EF6\u4F38\uFF0C\u5927\u9A7C\u5CF0</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;content-type&#39;</span>
<span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;=(^|-))\\w</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gim</span></span>

<span class="token keyword">let</span> res <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u628A 10000000000 \u8F6C\u5316\u4E3A 10.000.000.000</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u89E3\u6CD5\u4E00</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token string">&#39;10000000000&#39;</span>
<span class="token keyword">let</span> newNum <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    lastNum <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> num<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newNum<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
newNum <span class="token operator">=</span> newNum<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> reg1 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d{3})</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token keyword">let</span> backNum <span class="token operator">=</span> newNum<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg1<span class="token punctuation">,</span> <span class="token string">&#39;$1.&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> backNum<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lastNum<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>backNum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> result1 <span class="token operator">=</span> lastNum<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u89E3\u6CD5\u4E8C</span>
<span class="token keyword">let</span> reg1 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?=(\\B)(\\d{3})+$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token keyword">let</span> result1 <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg1<span class="token punctuation">,</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51),o=[t];function c(l,i){return s(),a("div",null,o)}var u=n(p,[["render",c],["__file","\u6B63\u5219\u8868\u8FBE\u5F0F.html.vue"]]);export{u as default};
