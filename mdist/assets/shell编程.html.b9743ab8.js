import{_ as n,o as s,c as a,d as e}from"./app.4b7e0070.js";const i={},l=e(`<h1 id="shell-\u7F16\u7A0B\u5165\u95E8" tabindex="-1"><a class="header-anchor" href="#shell-\u7F16\u7A0B\u5165\u95E8" aria-hidden="true">#</a> shell \u7F16\u7A0B\u5165\u95E8</h1><p>\u6587\u4EF6\u5934\u6307\u660E\u6267\u884C\u7A0B\u5E8F #!/bin/bash #!/usr/bin/python #!/usr/bin/node</p><h2 id="\u4E00\u3001\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u53D8\u91CF" aria-hidden="true">#</a> \u4E00\u3001\u53D8\u91CF</h2><h3 id="_1-\u4E00\u822C\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_1-\u4E00\u822C\u53D8\u91CF" aria-hidden="true">#</a> 1. \u4E00\u822C\u53D8\u91CF</h3><p>/etc/profile \u91CC\u914D\u7F6E\u5168\u5C40\u73AF\u5883\u53D8\u91CF</p><blockquote><p>$PATH \u5355\u4E2A\u7CFB\u7EDF\u53D8\u91CF<br> set \u6240\u6709\u53D8\u91CF<br> \u5728/etc/profile \u91CC export D=&#39;\u73AF\u5883\u53D8\u91CF&#39; \u8F93\u51FA\u4E3A\u5168\u5C40\u53D8\u91CF</p></blockquote><h3 id="_2-\u7533\u660E\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_2-\u7533\u660E\u53D8\u91CF" aria-hidden="true">#</a> 2. \u7533\u660E\u53D8\u91CF</h3><blockquote><p>A=100 \u7533\u660E\u53D8\u91CF<br> readonly B=200 \u7533\u660E\u6E05\u9664\u548C\u64CD\u4F5C\u7684\u53D8\u91CF<br> unset A \u6E05\u9664\u53D8\u91CF<br> echo $A \u4F7F\u7528\u53D8\u91CF C=\`ls -al\` \u4F7F\u7528\u547D\u4EE4\u8F93\u51FA\u503C<br> C=$(ls -al) \u540C\u4E0A</p></blockquote><h3 id="_3-\u4F4D\u7F6E\u53C2\u6570\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_3-\u4F4D\u7F6E\u53C2\u6570\u53D8\u91CF" aria-hidden="true">#</a> 3. \u4F4D\u7F6E\u53C2\u6570\u53D8\u91CF</h3><blockquote><p>./test.sh 100 300<br> $n \u4F8B\uFF1A$1 \u8868\u793A\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u503C\u4E3A 100<br> \${10} \u6709\u5341\u4E2A\u53C2\u6570\u5C31\u9700\u8981\u52A0\u5927\u62EC\u53F7<br> $# \u53C2\u6570\u7684\u603B\u4E2A\u6570 $* \u547D\u4EE4\u884C\u4E2D\u6240\u6709\u53C2\u6570,\u770B\u505A\u6574\u4F53 $@ \u547D\u4EE4\u884C\u4E2D\u6240\u6709\u53C2\u6570,\u533A\u5206\u5BF9\u5F85</p></blockquote><h3 id="_4-\u9884\u5B9A\u4E49\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_4-\u9884\u5B9A\u4E49\u53D8\u91CF" aria-hidden="true">#</a> 4. \u9884\u5B9A\u4E49\u53D8\u91CF</h3><blockquote><p>$$ $! \u6700\u540E\u4E00\u4E2A\u5F00\u59CB\u8FDB\u7A0B\u7684\u8FDB\u7A0B\u53F7 $? \u8FD0\u884C\u662F\u5426\u6210\u529F0\u30011 $$</p></blockquote><h2 id="\u4E8C\u3001\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u4E8C\u3001\u8FD0\u7B97\u7B26</h2><blockquote><p>$((\u8FD0\u7B97\u5F0F))<br> $[\u8FD0\u7B97\u5F0F] \u4F8B: $[1+2]<br> expr m + n \u4F8B: RES=\`expr 1 + 2\`</p></blockquote><h2 id="\u4E09\u3001\u6761\u4EF6\u5224\u65AD-\u548C-\u6D41\u7A0B\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u6761\u4EF6\u5224\u65AD-\u548C-\u6D41\u7A0B\u63A7\u5236" aria-hidden="true">#</a> \u4E09\u3001\u6761\u4EF6\u5224\u65AD \u548C \u6D41\u7A0B\u63A7\u5236</h2><blockquote><p>[ condition ] \u6CE8\u610F\u6709\u7A7A\u683C \u4F8B\uFF1A[ condition ] &amp;&amp; echo ok || echo notOk =\u7B49\u4E8E<br> -lt \u5C0F\u4E8E<br> -le \u5C0F\u4E8E\u7B49\u4E8E<br> -eq \u7B49\u4E8E<br> -gt \u5927\u4E8E<br> -ge \u5927\u4E8E\u7B49\u4E8E<br> -ne \u4E0D\u7B49\u4E8E<br> -r \u6709\u8BFB\u6743\u9650<br> -w \u6709\u5199\u6743\u9650<br> -x \u6709\u6267\u884C\u6743\u9650<br> -f \u5B58\u5728\u662F\u4E00\u4E2A\u5E38\u89C4\u6587\u4EF6<br> -e \u5B58\u5728\u6587\u4EF6<br> -d \u5B58\u5728\u662F\u4E00\u4E2A\u76EE\u5F55</p></blockquote><p>\u6D41\u7A0B\u63A7\u5236 - if \u5206\u652F\u8BED\u53E5</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token number">2</span> -lt <span class="token number">3</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;equal&#39;</span>
<span class="token keyword">elif</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;noteq&#39;</span>
<span class="token keyword">fi</span>

<span class="token comment"># \u5224\u65AD\u662F\u5426\u6709\u6587\u4EF6</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> -e /home/cy/a.txt <span class="token punctuation">]</span>
<span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;\u5B58\u5728&#39;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D41\u7A0B\u63A7\u5236 - case \u5206\u652F</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span>
    <span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&#39;i am ten&#39;</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;20&quot;</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&#39;i am tweenty&#39;</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    *<span class="token punctuation">)</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&#39;i am not all&#39;</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">esac</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D41\u7A0B\u63A7\u5236 - for \u5FAA\u574F</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u8BED\u6CD5\u4E00
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span>              <span class="token comment"># for i in $* \u4F20\u5165\u7684\u6574\u4F53 $@\u4F20\u5165\u7684\u6574\u4F53\u7C7B\u4F3C\u6570\u7EC4</span>
<span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;i am number $i&#39;</span>
<span class="token keyword">done</span>

\u8BED\u6CD5\u4E8C
<span class="token keyword">for</span><span class="token variable"><span class="token punctuation">((</span>\u521D\u59CB\u503C<span class="token punctuation">;</span>\u6761\u4EF6<span class="token punctuation">;</span>\u53D8\u91CF\u53D8\u5316<span class="token punctuation">))</span></span>     <span class="token comment">#  for((i=1; i&lt;=100; i++))</span>
<span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;something&#39;</span>
<span class="token keyword">done</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D41\u7A0B\u63A7\u5236 - while \u5FAA\u73AF</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>
<span class="token keyword">while</span> <span class="token punctuation">[</span> condition <span class="token punctuation">]</span>
<span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;something&quot;</span>
<span class="token keyword">done</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u56DB\u3001\u5176\u4ED6\u7CFB\u7EDF\u6307\u4EE4" tabindex="-1"><a class="header-anchor" href="#\u56DB\u3001\u5176\u4ED6\u7CFB\u7EDF\u6307\u4EE4" aria-hidden="true">#</a> \u56DB\u3001\u5176\u4ED6\u7CFB\u7EDF\u6307\u4EE4</h2><h3 id="_1-\u8BFB\u53D6\u63A7\u5236\u53F0\u8F93\u5165" tabindex="-1"><a class="header-anchor" href="#_1-\u8BFB\u53D6\u63A7\u5236\u53F0\u8F93\u5165" aria-hidden="true">#</a> 1. \u8BFB\u53D6\u63A7\u5236\u53F0\u8F93\u5165</h3><blockquote><p>read \u9009\u9879 \u63A5\u6536\u53C2\u6570<br> -t \u7B49\u5F85\u65F6\u95F4<br> -p \u8F93\u5165\u63D0\u793A<br> \u4F8B\uFF1Aread -p &quot;\u8BF7\u8F93\u5165 NUM=&quot; NUM</p></blockquote><h3 id="_2-\u7CFB\u7EDF\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_2-\u7CFB\u7EDF\u51FD\u6570" aria-hidden="true">#</a> 2. \u7CFB\u7EDF\u51FD\u6570</h3><p>basename</p><blockquote><p>basename path \u8FD4\u56DE\u6587\u4EF6\u540D \u4F8B\uFF1Abasename /home/a.txt --&gt; a.txt basename /home/a.txt .txt --&gt; a</p></blockquote><p>dirname \u8FD4\u56DE\u5B8C\u6574\u8DEF\u5F84 \u4F8B\uFF1Adirname /home/cy/a.txt --&gt; /home/cy</p><h3 id="_3-\u81EA\u5B9A\u4E49\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_3-\u81EA\u5B9A\u4E49\u51FD\u6570" aria-hidden="true">#</a> 3. \u81EA\u5B9A\u4E49\u51FD\u6570</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">function</span> <span class="token function-name function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">SUM</span><span class="token operator">=</span>$<span class="token punctuation">[</span><span class="token variable">$n1</span>+<span class="token variable">$n2</span><span class="token punctuation">]</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;\u548C\u662F<span class="token variable">$SUM</span>&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment"># \u8C03\u7528</span>
getSum <span class="token variable">$n1</span> <span class="token variable">$n2</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33),t=[l];function c(o,p){return s(),a("div",null,t)}var r=n(i,[["render",c],["__file","shell\u7F16\u7A0B.html.vue"]]);export{r as default};
